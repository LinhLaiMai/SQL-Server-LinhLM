SELECT * FROM LAYOFF;
-- 1418 (DISTINCT AND NO DISTINCT) ==> 1418 UNIQUE ROWS
-- THE 'LAYOFF' TABLE CONSISTS OF 16 COLUMNS DESCRIBED IN THE FOLLOWING SECTION.

--(1) #: LAID-OFF ID 
-- (DATA TYPE: FLOAT (CURRENTLY) ==> CHANGE INTO INT, FORMAT: # - ####, RANGE: 3-3290, DISTRIBUTION: 1418 UNIQUE VALUES, NULLABILITY: 0%,)

--(2) COMPANY: NAME OF THE COMPANY
-- DATA TYPE: NVARCHAR 255, DISTRIBUTION: 1125 UNIQUE COMPANIES: 
-- (2.1.) 5 COMPANIES OPERATES IN MORE THAN 1 COUNTRY:
WITH CTE AS(
SELECT DISTINCT COMPANY,COUNTRY 
FROM LAYOFF)
SELECT DISTINCT A.COMPANY, B.COUNTRY
FROM CTE A JOIN CTE B ON A. COMPANY=B.COMPANY AND A.COUNTRY!=B.COUNTRY
;
-- (2.2.) 220 COMPANIES LAID OFF MORE THAN ONCE. FEQUENCIES:
select distinct Company, Location_HQ, Company_Size_before_Layoffs, Laid_Off, Date_layoffs_proper
from Layoff



WITH CTE2 AS (SELECT COMPANY, THECOUNT AS TIMESLAIDOFF
FROM(SELECT COMPANY, COUNTRY, COUNT(COMPANY) AS THECOUNT
FROM LAYOFF
GROUP BY COMPANY, COUNTRY
) AS CTE
WHERE THECOUNT > 1
)
SELECT COMPANY, 
STRING_AGG(CONVERT(VARCHAR, DATE_LAYOFFS, 23), ', ') WITHIN GROUP (ORDER BY DATE_LAYOFFS) AS DATE_LAYOFFS2
FROM LAYOFF --NOTE:  STRING_AGG WILL GROUP CONCATENATE INTO A SINGLE ROW.
-- CONVERT HERE IS ONLY TO DISPLAY THE DESIRED TYPE.
-- 23 IS THE CODE FOR YYYY-MM-DD
WHERE COMPANY IN (SELECT COMPANY FROM CTE2)
GROUP BY COMPANY;

-- (3) LOCATION_HQ: LOCATION OF THE COMPANY
-- DATA TYPE: NVARCHAR 255,  DISTRIBUTION: 132 UNIQUE VALUES, NULLABILITY: 0%
-- FREQUENCY:
SELECT DISTINCT LOCATION_HQ, COUNT(LOCATION_HQ) AS LOCATION_FREQUENCIES
FROM [DBO].[LAYOFF]
GROUP BY LOCATION_HQ
ORDER BY COUNT(LOCATION_HQ) DESC

-- (4) COUNTRY: COUNTRY OF THE COMPANY
-- DATA TYPE: NVARCHAR 255, DISTRIBUTION: 37 UNIQUE VALUES, NULLABILITY: 0%
SELECT DISTINCT COUNTRY
FROM LAYOFF
WHERE COUNTRY IS NULL
-- FREQUENCIES
SELECT COUNTRY, COUNT(COUNTRY) AS COUNTRY_FREQUENCIES
FROM LAYOFF
GROUP BY COUNTRY
ORDER BY COUNT(COUNTRY) DESC
-- CHECK THE VALID LINK BETWEEN COUNTRY AND LOCATION:
WITH CTE AS (SELECT  DISTINCT COUNTRY, LOCATION_HQ
FROM LAYOFF -- THIS QUERY SHOWS 133 ROWS INSTEAD OF 132 ROWS (CORRESPONDING TO 132 LOCATIONS ABOVE)
)
SELECT LOCATION_HQ, COUNT(LOCATION_HQ)
FROM CTE
GROUP BY LOCATION_HQ
ORDER BY COUNT(LOCATION_HQ) DESC -- THIS QUERY SHOWS THAT OSLO APPEARS 2 TIMES IN THE LIST (UNDER COUNTRIES: NORWAY AND SWEDEN). HOWEVER, OSLO IS IN NORWAY, NOT SWEDEN.
-- CORRECTION: CHANGE OSLO SWEDEN TO OSLO NORWAY
UPDATE LAYOFF
SET COUNTRY= 'NORWAY'
WHERE LOCATION_HQ = 'OSLO'

-- (5) CONTINENT: CONTINENT OF THE COMPANY
-- DATA TYPE: NVARCHAR 255, 6 DISTINCT CONTINENTS
-- FEQUENCIES: 
SELECT CONTINENT, COUNT(CONTINENT) AS CONTINENT_FREQUENCIES
FROM LAYOFF
GROUP BY CONTINENT
ORDER BY COUNT(CONTINENT) DESC
-- CHECK THE VALID LINK BETWEEN CONTINENT AND COUNTRY:
SELECT  DISTINCT CONTINENT, COUNTRY
FROM LAYOFF -- THIS QUERY SHOWS 37 ROWS (CORRESPONDING TO 37 COUNTRY)

-- (6) LAID_OFF: NUMBER OF EMPLOYEES LAID OFF
-- DATA TYPE: FLOAT (CURRENTLY) ==> CHANGE TO INT
-- CHECKING FOR NULL AND INVALID VALUES:
SELECT COMPANY, LAID_OFF
FROM LAYOFF
WHERE LAID_OFF IS NULL OR LAID_OFF < 0 -- THIS QUERY RETURNS NO NULL OR INVALID VALUE

-- (7) DATE_LAYOFFS: DATE OF LAYOFF
-- DATA TYPE: DATETIME
-- CHECKING FOR NULL AND INVALID VALUES:
SELECT COMPANY, DATE_LAYOFFS
FROM LAYOFF
WHERE DATE_LAYOFFS IS NULL
-- DATE_LAYOFFS IS CURRENTLY IN ' YYYY-MM-DD HH:MM:SS ' FORMAT. FORMAT IT AS YYYY-MM-DD FORMAT.
ALTER TABLE LAYOFF ADD DATE_LAYOFFS_PROPER DATE;
UPDATE LAYOFF SET DATE_LAYOFFS_PROPER = CONVERT(DATE, DATE_LAYOFFS, 101);

-- (8) PERCENTAGE: LAID_OFF/COMPANY SIZE BEFORE LAYOFF * 100
-- DATA TYPE: FLOAT
-- CHECKING FOR NULL AND INVALID COLUMNS:
SELECT PERCENTAGE
FROM LAYOFF
WHERE PERCENTAGE IS NULL OR PERCENTAGE <= 0 -- THIS QUERY RETURNS 0 ROW.
-- CHECKING FOR ACCURACY (NOTE: THIS WILL BE CHECKED AFTER CHECKING FOR NULL AND INVALID VALUES OF COMPANY SIZE BEFORE LAYOFFS AND LAID_OFF)
SELECT LAID_OFF, COMPANY_SIZE_BEFORE_LAYOFFS, PERCENTAGE , ROUND(CAST(LAID_OFF AS FLOAT)*100/CAST (COMPANY_SIZE_BEFORE_LAYOFFS AS FLOAT),0)
FROM LAYOFF
WHERE PERCENTAGE <> ROUND(CAST(LAID_OFF AS FLOAT)*100/CAST (COMPANY_SIZE_BEFORE_LAYOFFS AS FLOAT),0)
-- PERCENTAGE CURRENTLY CONSISTS OF INT, DECIMAL AND OTHER NUMERICAL TYPES. CORRECTION: CREATE A NEW COLUMN: PERCENTAGE_PROPER
ALTER TABLE LAYOFF ADD PERCENTAGE_PROPER FLOAT;
UPDATE LAYOFF SET PERCENTAGE_PROPER = ROUND(CAST(LAID_OFF AS FLOAT)*100/CAST (COMPANY_SIZE_BEFORE_LAYOFFS AS FLOAT),0);

-- (9) COMPANY SIZE BEFORE LAYOFFS
-- DATA TYPE: INT
-- CHECKING FOR NULL AND INVALID COLUMNS:
SELECT COMPANY_SIZE_BEFORE_LAYOFFS
FROM LAYOFF
WHERE COMPANY_SIZE_BEFORE_LAYOFFS IS NULL OR COMPANY_SIZE_BEFORE_LAYOFFS <= 0 -- -- THIS QUERY RETURNS 0 ROW.

-- (10) COMPANY SIZE AFTER LAYOFFS = BEFORE - LAID_OFF
-- DATA TYPE: INT
-- CHECKING FOR NULL AND INVALID COLUMNS:
SELECT COMPANY_SIZE_AFTER_LAYOFFS
FROM LAYOFF
WHERE COMPANY_SIZE_AFTER_LAYOFFS IS NULL OR COMPANY_SIZE_AFTER_LAYOFFS <= 0-- THIS QUERY SHOWS 48 ROWS WHERE COMPANY SIZE IS 0.
-- CHECKING '0' VALUES
SELECT *, COMPANY_SIZE_BEFORE_LAYOFFS-LAID_OFF AS THE_DIFF
FROM LAYOFF
WHERE COMPANY_SIZE_AFTER_LAYOFFS=0 -- THE_DIFF IS 0 SO DATA IS CORRECT.

-- (11) INDUSTRY: INDUSTRY OF THE COMPANY
-- DATA TYPE: NVARCHAR 255
-- CHECKING FOR NULL AND INVALID COLUMNS:
SELECT INDUSTRY
FROM LAYOFF
WHERE INDUSTRY IS NULL -- THIS QUERY SHOWS 0 ROW
-- DISTRIBUTION: 30 DISTINCT INDUSTRIES
SELECT DISTINCT INDUSTRY
FROM LAYOFF
-- FREQUENCIES:
SELECT INDUSTRY, COUNT(INDUSTRY) AS INDUSTRY_FREQUENCIES
FROM LAYOFF
GROUP BY INDUSTRY
ORDER BY INDUSTRY_FREQUENCIES DESC

-- (12) STAGE
-- DATA TYPE: NVARCHAR 255
-- CHECKING FOR NULL AND INVALID COLUMNS:
SELECT STAGE
FROM LAYOFF
WHERE STAGE IS NULL -- THIS QUERY SHOWS 0 ROW
-- DISTRIBUTION: 30 DISTINCT INDUSTRIES
SELECT DISTINCT STAGE
FROM LAYOFF
-- FREQUENCIES:
SELECT STAGE, COUNT(STAGE) AS STAGE_FREQUENCIES
FROM LAYOFF
GROUP BY STAGE
ORDER BY STAGE_FREQUENCIES DESC

-- (13) MONEY_RAISED_IN_$_MIL
-- CHECKING FORMAT:
SELECT MONEY_RAISED_IN_$_MIL
FROM LAYOFF; -- VALUES ARE IN 2 FORMATS: XXXX AND $XXXX.
-- CHANGE ALL TO FORMAT: XXXX
ALTER TABLE LAYOFF ADD MONEY_RAISED_IN_$_MIL_PROPER DECIMAL;
UPDATE LAYOFF SET MONEY_RAISED_IN_$_MIL_PROPER = REPLACE(MONEY_RAISED_IN_$_MIL, '$', '');
-- CHECKING FOR NULL AND INVALID VALUES
SELECT MONEY_RAISED_IN_$_MIL_PROPER
FROM LAYOFF
WHERE MONEY_RAISED_IN_$_MIL_PROPER IS NULL OR MONEY_RAISED_IN_$_MIL_PROPER <=0

-- (14) YEAR
-- CHECKING FOR ACCURACY
SELECT YEAR, YEAR(DATE_LAYOFFS_PROPER)
FROM LAYOFF
WHERE YEAR <> YEAR(DATE_LAYOFFS_PROPER) -- THIS QUERY RETURNS 0 ROW
-- CHECKING FOR NULL AND INVALID VALUES
SELECT DISTINCT YEAR
FROM LAYOFF
WHERE YEAR IS NULL AND YEAR NOT IN (2020,2021,2022,2023,2024) -- THIS QUERY RETURNS 0 ROW
-- FREQUENCIES
SELECT YEAR, COUNT(YEAR)
FROM LAYOFF
GROUP BY YEAR

-- (15 & 16) LAT AND LONG
